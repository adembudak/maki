name: GCC & Clang

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        config:
          - { compiler: g++,     version: 10, build_type: Release, cppstd: 17 }
          - { compiler: g++,     version: 11, build_type: Debug,   cppstd: 20 }
          - { compiler: g++,     version: 12, build_type: Release, cppstd: 20 }
            #- { compiler: clang++, version: 11, build_type: Debug,   cppstd: 17 }
          - { compiler: clang++, version: 12, build_type: Debug,   cppstd: 17 }
          - { compiler: clang++, version: 13, build_type: Release, cppstd: 17 }
          - { compiler: clang++, version: 14, build_type: Debug,   cppstd: 17 }

    name: "${{matrix.config.compiler}} ${{matrix.config.version}} (C++${{matrix.config.cppstd}}, ${{matrix.config.build_type}})"

    steps:
    - uses: actions/checkout@v3

    - name: Install g++-12
      if: matrix.config.compiler == 'g++' && matrix.config.version == 12
      run: sudo apt install -y g++-12

    - name: Install clang
      if: matrix.config.compiler == 'clang++'
      run: sudo apt install -y clang-${{matrix.config.version}}

    - name: Install catch2
      run: sudo apt install -y catch2

    - name: Configure CMake
      run: |
        cmake \
          -B ${{github.workspace}}/build \
          -DCMAKE_CXX_COMPILER=${{matrix.config.compiler}}-${{matrix.config.version}} \
          -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}} \
          -DMAKI_BUILD_TESTS=1 \
          -DMAKI_BUILD_EXAMPLES=1 \
          -DMAKI_FORCE_CATCH2_V2=1

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
